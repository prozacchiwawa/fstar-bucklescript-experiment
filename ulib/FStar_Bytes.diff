--- FStar_Bytes.ml	2020-12-12 12:45:20.706755020 -0800
+++ /usr/local/pkg/fstar/ulib/ml/FStar_Bytes.ml	2020-12-11 09:40:47.489942500 -0800
@@ -5,9 +5,9 @@
 
 type u8 = U8.t
 type u16 = U16.t
-type u32 = int
+type u32 = U32.t
 
-type byte = int
+type byte = u8
 
 type bytes = string
 type cbytes = string (* not in FStar.Bytes *)
@@ -116,17 +116,17 @@
     Z.to_int (int_of_bytes b)
 
 let bytes_of_int32 (n:U32.t) =
-    bytes_of_int (Z.of_int 4) (Z.of_int (int_of_string (FStar_UInt32.to_string n)))
+    bytes_of_int (Z.of_int 4) (Z.of_int n)
 
 let bytes_of_int16 (n:U32.t) =
-    bytes_of_int (Z.of_int 2) (Z.of_int (int_of_string (FStar_UInt32.to_string n)))
+    bytes_of_int (Z.of_int 2) (Z.of_int n)
 
 let bytes_of_int8 (n:U32.t) =
-    bytes_of_int (Z.of_int 1) (Z.of_int (int_of_string (FStar_UInt32.to_string n)))
+    bytes_of_int (Z.of_int 1) (Z.of_int n)
 
 type 'a minbytes = bytes
 
-let xor (len:int) (s1:'a minbytes) (s2:'b minbytes) : bytes =
+let xor (len:U32.t) (s1:'a minbytes) (s2:'b minbytes) : bytes =
     let f i = (int_of_char s1.[i]) lxor (int_of_char s2.[i]) in
     init len f
 
